//
//  TDJSONReader.m
//  TDFoundation
//
//  Created by Robin Hsu on 2015/4/9.
//  Copyright (c) 2015å¹´ TechD. All rights reserved.
//
//  ------------------------------------------------------------------------------------------------
//  ------------------------------------------------------------------------------------------------

#ifndef __ARCMacros_H__
    #import "ARCMacros.h"
#endif  //  End of __ARCMacros_H__.


#import "TDJSONReader.h"
#import "Foundation+TechD.h"

//  ------------------------------------------------------------------------------------------------
//  ------------------------------------------------------------------------------------------------
//  ------------------------------------------------------------------------------------------------
//  ------------------------------------------------------------------------------------------------


//  ------------------------------------------------------------------------------------------------
//  ------------------------------------------------------------------------------------------------
#pragma mark -
#pragma mark class TDJSONReader

//  ------------------------------------------------------------------------------------------------
//  ------------------------------------------------------------------------------------------------
#pragma mark declare private category ()
//  ------------------------------------------------------------------------------------------------
@interface TDJSONReader ()
{
    NSDictionary                  * dictionaryContainer;
    NSArray                       * arrayContainer;
}

//  ------------------------------------------------------------------------------------------------

@end


//  ------------------------------------------------------------------------------------------------
//  ------------------------------------------------------------------------------------------------


//  ------------------------------------------------------------------------------------------------
//  ------------------------------------------------------------------------------------------------
#pragma mark -
#pragma mark declare private category (Private)
//  ------------------------------------------------------------------------------------------------
@interface TDJSONReader (Private)

//  ------------------------------------------------------------------------------------------------
#pragma mark declare for initial this class.
//  ------------------------------------------------------------------------------------------------
/**
 *  @brief initial the attributes of class.
 *  initial the attributes of class.
 */
- ( void ) _InitAttributes;


//  ------------------------------------------------------------------------------------------------


@end


//  ------------------------------------------------------------------------------------------------
//  ------------------------------------------------------------------------------------------------


//  ------------------------------------------------------------------------------------------------
//  ------------------------------------------------------------------------------------------------
#pragma mark -
#pragma mark implementation private category (Private)
//  ------------------------------------------------------------------------------------------------
@implementation TDJSONReader (Private)

//  ------------------------------------------------------------------------------------------------
#pragma mark method for initial this class.
//  ------------------------------------------------------------------------------------------------
//  --------------------------------
- ( void ) _InitAttributes
{
    dictionaryContainer             = nil;
    arrayContainer                  = nil;

}



//  ------------------------------------------------------------------------------------------------
//  ------------------------------------------------------------------------------------------------

@end

//  ------------------------------------------------------------------------------------------------
//  ------------------------------------------------------------------------------------------------


//  ------------------------------------------------------------------------------------------------
//  ------------------------------------------------------------------------------------------------
#pragma mark -
#pragma mark implementation for public
//  ------------------------------------------------------------------------------------------------
@implementation TDJSONReader


//  ------------------------------------------------------------------------------------------------
#pragma mark synthesize variable.


//  ------------------------------------------------------------------------------------------------
//  ------------------------------------------------------------------------------------------------
#pragma mark overwrite implementation of NSObject
//  ------------------------------------------------------------------------------------------------
//  --------------------------------
- ( void ) dealloc
{

}

//  ------------------------------------------------------------------------------------------------
#pragma mark method for create the object.
//  ------------------------------------------------------------------------------------------------
- ( instancetype ) initWithFile:(NSString *)filename forDirectories:(TDGetPathDirectory)directory inDirectory:(NSString *)subpath
                       encoding:(NSStringEncoding)encode
{
    self                            = [super init];
    if ( nil == self )
    {
        return nil;
    }
    
    [self                           _InitAttributes];
    
    id                              container;
    NSString                      * fullPath;
    NSError                       * error;
    
    error                           = nil;
    fullPath                        = TDGetPathForDirectories( directory, [filename stringByDeletingPathExtension], [filename pathExtension], subpath, NO );
    container                       = [NSJSONSerialization loadJSON: fullPath encoding: encode error: &error];
    if ( nil != error )
    {
        NSLog( @"init error : %@", error );
        return nil;
    }
    
    if ( [container isKindOfClass: [NSDictionary class]] == YES )
    {
        dictionaryContainer         = container;
    }
    else if ( [container isKindOfClass: [NSArray class]] == YES )
    {
        arrayContainer              = container;
    }
    else
    {
        NSLog( @"container of data is unknow type : %@", container );
    }
    return self;
}

//  ------------------------------------------------------------------------------------------------
+ ( instancetype ) loadData:(NSString *)filename forDirectories:(TDGetPathDirectory)directory inDirectory:(NSString *)subpath
                   encoding:(NSStringEncoding)encode
{
    return [[[self class] alloc] initWithFile: filename forDirectories: directory inDirectory: subpath encoding: encode];
}


//  ------------------------------------------------------------------------------------------------
//  ------------------------------------------------------------------------------------------------


@end

//  ------------------------------------------------------------------------------------------------
//  ------------------------------------------------------------------------------------------------
















